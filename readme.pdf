This ++Malloc project was done by Hassan Saeed(hs770) and Haneef Pervez(hp408). To implement our program we used a static array called myblock and a struct to hold our metadata called memEntry. The fields of the struct memEntry were a an int field called size to keep track of the size, an int field called isFree to keep track of if the corresponding spcae was free or not, and pointer to the next memEntry in the array. We kept track of the first malloc by keeping a short called magicNumber in the beginning of the array. If the magic number was not present in the array, then it was the first malloc, and the first metadata will be added. If it is not the first malloc, then we allocate the space and add a metadata after the allocated space that points to the rest of the array. We also check if the amount to be malloced is valid before allocating space by checking if the size to be allocated is nonnegative and can actually fit in the array. We implemented myfree by taking a pointer and going to the corresponding metadata and changing the isFree field to 1. We also check to make sure the pointer given is a valid pointer. To keep track of the workloads we ran them 100 times and stored the total times in a double array and then divided each number by 100.  
